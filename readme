一.说明
   1.为了避免线下,线上环境不统一造成的BUG,要求所有人统一本地开发环境,后续因为个人环境的不一致导致的问题,后果自负.
   2.采用docker-compose作为基础工具进行本地环境的统一。
   3.每个开发人员在该仓库中以自己的名字汉语拼音全拼命名目录,在里面编排自己的本地开发环境(除了基础镜像以及网段必须一致之外,其余可以自由拓展)
   4.学习文档 https://docs.docker.com/compose/compose-file/#compose-file-structure-and-examples
   5.所有的项目请git clone到wwwroot下面,按照组织分好
   ...未完待续




二.常用指令

docker-compose  --help
docker-compose up -d         #后台启动所有的编排服务
docker-compose up -d  redis  #启动redis,适合编排中追加的新服务的单独启动
docker-compose down          #当启动部分失败的时候，则将之前的容器删除，再执行docker-compose up -d启动
                             #Stop and remove containers, networks, images, and volumes
docker-compose  restart nginx #当配置文件修改的时候需要这个指令即可
docker rm -f     nginx        #当nginx镜像修改的时候需要这个指令




三.注意事项

1.如果之前创建了相同子网的网络 要先删掉之前的,否则冲突
2.如果启动的时候指定了-p 网桥名称。那么停止或删除时也要docker-compose -p 网桥名称 stop
3.启动前，请配置好nginx的配置文件，以及对应的项目clone到wwwroot下面额
...


四.经典场景案例

...


五.基础镜像

注意:
1.基础镜像已经开源到docker hub中进行维护了,阿里云中的历史基础镜像仍然有效,只是后续升级不再继续维护,只在docker hub中进行基础镜像的升级维护
2.php基础镜像支持cli fpm  fpm+nginx组合  三种形式,支持操作系统alpine/jessie/stretch
3.nginx基础镜支持操作系统 alpine/stretch
4.建议微服务项目采用alpine,当然所有项目都采用alpine也未尝不可
5.建议后台项目采用stretch操作系统,当然你想挑战使用alpine十分赞同

https://hub.docker.com/r/shanbumin/php/tags/   [php基础镜像地址]
https://hub.docker.com/r/shanbumin/nginx/tags/ [nginx基础镜像地址]







